version: "3.4"

x-service:
  &service-envs
  AMQP_URL: amqp://guest:guest@amqp:5672/ 
  ROLE: SERVICE
  API_PORT: 7789
  WORK_WEIGHT: 1
  GOMAXPROCS: 2
x-load:
  &load-properties
  RATE: 17
  DURATION: 60

services:
  manager:
    container_name: manager
    build: "service"
    image: vahidmostofi/priority_message_queue
    restart: on-failure
    depends_on:
      - serviceB
    environment:
      AMQP_URL: amqp://guest:guest@amqp:5672/ 
      ROLE: MANAGER
      LOAD_GENERATOR_URL: loadgenerator
      API_PORT: 7789
      FINAL_QUEUE: QUEUE_E
      <<: *load-properties
      DEBUG: 'FALSE'
      GOMAXPROCS: 2
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 3G
        reservations:
          cpus: "1"
          memory: 1G
################################################
  serviceA:
    container_name: serviceA
    build: "service"
    image: vahidmostofi/priority_message_queue
    restart: on-failure
    depends_on:
      - loadgenerator
    # ports:
    #   - 7789:7789
    environment:
      << : *service-envs
      TARGET_QUEUE: QUEUE_B
      SOURCE_QUEUE: QUEUE_A
      DEBUG: 'FALSE'
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 3G
        reservations:
          cpus: "1"
          memory: 1G
################################################
  serviceB:
    container_name: serviceB
    build: "service"
    image: vahidmostofi/priority_message_queue
    restart: on-failure
    depends_on:
      - loadgenerator
    # ports:
    #   - 7789:7789
    environment:
      << : *service-envs
      TARGET_QUEUE: QUEUE_C
      SOURCE_QUEUE: QUEUE_B
      DEBUG: 'FALSE'      
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 3G
        reservations:
          cpus: "1"
          memory: 1G
################################################
  serviceC:
    container_name: serviceC
    build: "service"
    image: vahidmostofi/priority_message_queue
    restart: on-failure
    depends_on:
      - loadgenerator
    # ports:
    #   - 7789:7789
    environment:
      << : *service-envs
      TARGET_QUEUE: QUEUE_D
      SOURCE_QUEUE: QUEUE_C
      DEBUG: 'FALSE'
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 3G
        reservations:
          cpus: "1"
          memory: 1G
################################################
  serviceD:
    container_name: serviceD
    build: "service"
    image: vahidmostofi/priority_message_queue
    restart: on-failure
    depends_on:
      - loadgenerator
    # ports:
    #   - 7789:7789
    environment:
      << : *service-envs
      TARGET_QUEUE: QUEUE_E
      SOURCE_QUEUE: QUEUE_D
      DEBUG: 'FALSE'
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 3G
        reservations:
          cpus: "1"
          memory: 1G
################################################
  loadgenerator:
    container_name: loadgenerator
    build: "service"
    image: vahidmostofi/priority_message_queue
    restart: on-failure
    depends_on:
      - amqp
    ports:
      - 7789:7789
    environment:
      API_PORT: 7789
      AMQP_URL: amqp://guest:guest@amqp:5672/
      ROLE: GENERATOR
      TARGET_QUEUE: QUEUE_A
      <<: *load-properties
      DEBUG: 'FALSE'
      GOMAXPROCS: 3
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 3G
        reservations:
          cpus: "1"
          memory: 1G
################################################
  amqp:
    image: rabbitmq:3-management-alpine
    container_name: amqp
    # volumes:
    #     - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
    #     - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
    #     - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
    ports:
        - 5672:5672
        - 15672:15672
